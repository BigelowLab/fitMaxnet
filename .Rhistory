cat("    Projecting model\n")
projMod <- predict(maxnet_model, projData, type = "cloglog")
cat("    Preparing and saving projection raster\n")
projRas <- projStack[[1]]
raster::values(projRas) <- NA
raster::values(projRas)[goodCellInd] <- projMod[,1]
outputPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/projMean2050_rcp45/", this_Taxon, "basicFit_reg_", selectedRegMult[thisTaxon],"_mean2050_rcp45.tif")
raster::writeRaster(projRas, outputPath, format = "GTiff", overwrite = TRUE)
}
for (thisTaxon in taxonList)
{
cat("Projecting", thisTaxon, "\n")
this_Taxon <- gsub(" ", "_", thisTaxon, fixed = TRUE)
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/reg_",selectedRegMult[thisTaxon], "/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
load(modelPath)
cat("    Projecting model\n")
projMod <- predict(maxnet_model, projData, type = "cloglog")
cat("    Preparing and saving projection raster\n")
projRas <- projStack[[1]]
raster::values(projRas) <- NA
raster::values(projRas)[goodCellInd] <- projMod[,1]
outputPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/projMean2050_rcp45/", this_Taxon, "basicFit_reg_", selectedRegMult[thisTaxon],"_mean2050_rcp45.tif")
raster::writeRaster(projRas, outputPath, format = "GTiff", overwrite = TRUE)
}
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
extent(maxentRaster)
extent(maxentRaster) == NSW_extent
extent(maxentRaster) == extent(maxentRaster)
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
?crop
extent(maxentRaster) == NSW_extent
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
par(op)
dev.off()
dev.off()
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
source('~/R-scripts/fitMaxnet/R/occThin.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
source('~/R-scripts/fitMaxnet/R/occThin.R')
View(occThin)
library(fitMaxnet)
library(fitMaxnet)
@backreference
backreference
?backreference
??backreference
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
source('~/R-scripts/fitMaxnet/R/occThin.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
source('~/R-scripts/Make_sysdata_fitMaxnet.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
d <- read.csv("/home/data/RBG Projects/Restore and Renew/ALA-records/SpeciesData/Acacia linifolia/Acacia_linifolia_herbariumRecords_filtered.csv", stringsAsFactors = FALSE)
View(d)
d1 <- occThin(d, 7, 6, 10)
?occThin
library(fitMaxnet)
d1 <- occThin(d, 7, 6, 10)
library(fitMaxnet)
d1 <- occThin(d, 7, 6, 10)
library(fitMaxnet)
library(fitMaxnet)
d1 <- occThin(d, 7, 6, 10)
?sp::spDistsN1
library(fitMaxnet)
d1 <- occThin(d, 7, 6, 10)
View(d1)
buffPoly <- bufferPoints(d1, 100)
library(fitMaxnet)
buffPoly <- bufferPoints(d1, 100)
plot(buffPoly)
plot(buffPoly)
library(sp)
plot(buffPoly)
points(d1$Longitude, d1$Latitude)
?raster::mask
?stopifnot
stopifnot(1 == 1, all.equal(pi, 3.14159265), 1 < 2)
stopifnot(1 == 2, all.equal(pi, 3.14159265), 1 < 2)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
?prepData
library(fitMaxnet)
?prepProjData
?maxnet
library(fitMaxnet)
prepProjData("/mnt/Wallace/ENM_env_data/eastOZ-dataset/Future_climate/rcp45_2050/tif")
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads")
library(fitMaxnet)
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads", "rcp45_2050")
prepProjData("/mnt/Wallace/ENM_env_data/eastOZ-dataset/Future_climate/rcp45_2070/tif")
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads", "rcp45_2070")
prepProjData("/mnt/Wallace/ENM_env_data/eastOZ-dataset/Future_climate/rcp85_2050/tif")
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads", "rcp85_2050")
prepProjData("/mnt/Wallace/ENM_env_data/eastOZ-dataset/Future_climate/rcp85_2070/tif")
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads", "rcp85_2070")
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
load("/home/data/RBG Projects/SoS/Eucalyptus sp. Cattai/ENM/Eucalyptus sp. Cattai/reg_2/Eucalyptus_sp._Cattai_reg_2.Rd")
names(maxnet_model$betas)
library(fitMaxnet)
library(raster)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
occPts <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1/Banksia_spinulosa_SWD.csv", stringsAsFactors = FALSE)
buffPoly <- bufferPts(occPts)
library(fitMaxnet)
buffPoly <- bufferPts(occPts)
buffPoly <- bufferPoints(occPts)
plot(buffPoly)
library(sp)
plot(buffPoly)
source('~/R-scripts/Make_sysdata_fitMaxnet.R')
library(fitMaxnet)
buffPoly <- bufferPoints(occPts)
plot(buffPoly)
library(raster)
bkgCells <- sampleBackground(occPts, raster("/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA/CHELSA_bio10_01.tif"), buffPoly)
library(fitMaxnet)
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1/Banksia_spinulosa_allData_thin_1_occData.csv")
latColInd <- grep("LAT", toupper(colnames(occData)))
longColInd <- grep("LONG", toupper(colnames(occData)))
boundsPoly <- bufferPoints(occData, 100)
library(fitMaxnet)
boundsPoly <- bufferPoints(occData, 100)
library(sp)
boundsPoly <- bufferPoints(occData, 100)
plot(boundsPoly)
library(raster)
envRas <- raster("/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA/CHELSA_bio10_01.tif")
bkg.cells <- sampleBackground(as.matrix(occData[, c(latColInd, longColInd)]) , nBkgSamples = 10000, baseRaster = envRas, boundsPolygon = boundsPoly)
bkg.latlong <- xyFromCell(envRas, bkg.cells)
prepData("aa bb", occData, boundsPoly = boundsPoly, envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA", outputPath = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1")
library(fitMaxnet)
prepData("aa bb", occData, boundsPoly = boundsPoly, envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA", outputPath = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1")
library(fitMaxnet)
prepData("aa bb", occData, boundsPoly = boundsPoly, envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA", outputPath = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1")
View(bkg.latlong)
library(sp)
library(raster)
library(fitMaxnet)
library(sp)
envRas <- raster("/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA/CHELSA_bio10_01.tif")
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1/Banksia_spinulosa_allData_thin_1_occData.csv", stringsAsFactors = FALSE)
buffPoly <- bufferPoints(occData, 100)
occCells <- raster::cellFromXY(envRas, occData[, c("longitude", "latitude")])
plot(buffPoly)
View(occData)
source('~/R-scripts/sampleBackground_debug.R')
plot(envRas)
# Remove occupied cells from the set available for selection
raster::values(envRas)[occCells] <- NA
activeArea <- raster::mask(envRas, buffPoly)
plot(activeArea)
availableCells <- which(raster::values(activeArea) == 1)
selectedCells <- NULL
for (i in 1:10000)
{
selectedCells <- c(selectedCells, sample(1:length(availableCells), 1))
availableCells <- availableCells[-i]
}
selXY <- xyFromCell(envRas, selectedCells)
points(selXY, pch = 16)
source('~/R-scripts/sampleBackground_debug.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
?base::chull
?chull
?prcomp
?png
source('~/R-scripts/fitMaxnet/R/fitMaxnet.R')
library(fitMaxnet)
library(fitMaxnet)
d <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Restore and Renew/RandR_KML/Banksia marginata/Banksia_marginata_herbariumRecords.csv")
thinningReview("Banksia marginata", d, "/home/peterw/Data_and_Projects/RBG Projects/Restore and Renew/RandR_KML/Banksia marginata/Banksia_marginata_herbariumRecords.csv", "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/herbariumData_thinningTrials",doPlots = TRUE, writeResults = TRUE)
thinningReview("Banksia marginata", d, "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff", "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/herbariumData_thinningTrials",doPlots = TRUE, writeResults = TRUE)
library(fitMaxnet)
thinningReview("Banksia marginata", d, "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff", "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/herbariumData_thinningTrials",doPlots = TRUE, writeResults = TRUE)
source('~/R-scripts/explorePCA_Banskia_marginata-envOutlier.R')
source('~/R-scripts/explorePCA_Banskia_marginata-envOutlier.R')
plot(basePCA$x[, c(1,2)])
text(basePCA$x[, c(1,2)], as.character(occData$siteKey))
library(fitMaxnet)
nas <- envCorrAnalysis("Banksia marginata", "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",)
nas <- envCorrAnalysis("Banksia marginata", "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff","/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/Banksia_marginata_herbariumRecords.csv")
nas <- envCorrAnalysis("Banksia marginata", envData = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/Banksia_marginata_herbariumRecords.csv")
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/Banksia_marginata_herbariumRecords.csv", stringsAsFactors = FALSE)
xInd <- grep("LONG", toupper(colnames(occData)))
xVar <- NULL
if (!is.null(xVar))
{
if (xVar %in% colnames(occData))
xCoords <- occData[, xVar]
else
stop(paste0("Named x-coord variable, ", xVar, " not found in occData"))
}
else
{
# Try to find a "longitude" match in colnames of occData
xInd <- grep("LONG", toupper(colnames(occData)))
if (length(xInd) == 0)
stop("No longitude variable found in occData")
else
if (length(xInd) > 1)
stop("Multiple options for longitude found in occData: please select one")
else
xCoords <- occData[, xInd]
}
yVar <- NULL
if (!is.null(yVar))
{
if (yVar %in% colnames(occData))
yCoords <- occData[, yVar]
else
stop(paste0("Named y-coord variable, ", yVar, " not found in occData"))
}
else
{
# Try to find a "longitude" match in colnames of occData
yInd <- grep("LAT", toupper(colnames(occData)))
if (length(yInd) == 0)
stop("No latitude variable found in occData")
else
if (length(yInd) > 1)
stop("Multiple options for latitude found in occData: please select one")
else
yCoords <- occData[, yInd]
}
library(fitMaxnet)
nas <- envCorrAnalysis("Banksia marginata", envData = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/Banksia_marginata_herbariumRecords.csv")
library(fitMaxnet)
ans <- envCorrAnalysis("Banksia marginata", envData = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/Banksia_marginata_herbariumRecords.csv")
blah <- c("siteKey","longitude","latitude","location","year")
xxx <- grep("LONG", blah)
xx
xxx
xxx <- grep("LONG", blah, fixed = TRUE)
xxx
xxx <- grep("LONG", toupper(blah))
xxx
occData = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/Banksia_marginata_herbariumRecords.csv"
colnames(occData)
names(occData)
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/Banksia_marginata_herbariumRecords.csv", stringsAsFactors = FALSE)
ans <- envCorrAnalysis("Banksia marginata", envData = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = occData)
ans <- envCorrAnalysis("Banksia marginata", envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = occData)
envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff"
library(fitMaxnet)
ans <- envCorrAnalysis("Banksia marginata", envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = occData)
library(fitMaxnet)
ans <- envCorrAnalysis("Banksia marginata", envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = occData)
library(fitMaxnet)
ans <- envCorrAnalysis("Banksia marginata", envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = occData)
source('~/R-scripts/fitMaxnet/R/corrAnalysis.R')
library(fitMaxnet)
ans <- envCorrAnalysis("Banksia marginata", envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = occData)
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/Banksia_marginata_herbariumRecords.csv", stringsAsFactors = FALSE)
ans <- envCorrAnalysis("Banksia marginata", envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = occData)
library(fitMaxnet)
ans <- envCorrAnalysis("Banksia marginata", envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = occData)
ans
library(fitMaxnet)
ans <- envCorrAnalysis("Banksia marginata", envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff",occData = occData)
ans
?ggsave
mm <- matrix(runif(9), 3,3, dimnames = list(letters[1:3], letters[:3]))
mm <- matrix(runif(9), 3,3, dimnames = list(letters[1:3], letters[1:3]))
mm
ind <- which(mm > 0.7, arr.ind = TRUE)
ind
ind <- which(mm[upper.tri(mm)] > 0.7, arr.ind = TRUE)
ind
mm
upper.tri(mm)
lower.tri(mm)
t()
t(lower.tri(mm))
flip(lower.tri(mm))
?upper.tri
diag(3)
mt <- lower.tri(mm)
mt <- mt[rev(rownames(mt)),]
mt
mt <- mt[rev(1:nrow(mt)),]
mt <- lower.tri(mm)
mt
mt <- mt[rev(1:nrow(mt)),]
mt
library(raster)
envDataPath <- "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff"
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/Banksia_marginata_herbariumRecords.csv", stringsAsFactors = FALSE)
threshold <- 0.7
rasStack <- raster::stack(list.files(envDataPath, "*.*", full.names = TRUE))
envData <- raster::extract(rasStack, cbind(x = xCoords, y = yCoords))
badInd <- which(is.na(envData), arr.ind = TRUE)
if (nrow(badInd) > 0) envData <- envData[-badInd[, 1], ]
corr <- stats::cor(envData)
ind <- which(abs(corr) >= threshold, arr.ind = TRUE)
xVar = NULL
yVar = NULL
xInd <- grep("LONG", toupper(colnames(occData)))
# Try to find a "longitude" match in colnames of occData
yInd <- grep("LAT", toupper(colnames(occData)))
yCoords <- occData[, yInd]
xCoords <- occData[, xInd]
rasStack <- raster::stack(list.files(envDataPath, "*.*", full.names = TRUE))
envData <- raster::extract(rasStack, cbind(x = xCoords, y = yCoords))
badInd <- which(is.na(envData), arr.ind = TRUE)
if (nrow(badInd) > 0) envData <- envData[-badInd[, 1], ]
corr <- stats::cor(envData)
ind <- which(abs(corr) >= threshold, arr.ind = TRUE)
View(ind)
View(corr)
corr
corr[lower.tri(corr)]
ind2 <- which(lower.tri(corr), arr.ind = TRUE)
ind <- which(abs(corr[ind2]) >= 0
)
ind <- which(abs(corr[ind2]) >= threshold, arr.ind = TRUE)
ind
corr <- stats::cor(envData)
ind2 <- which(lower.tri(corr), arr.ind = TRUE)
ind <- which(abs(corr[ind2]) >= threshold, arr.ind = TRUE)
ind2
View(ind2)
indx <- which(abs(corr) >= threshold, arr.ind = TRUE)
View(indx)
ind2[ind,]
?swap
??swap
ind2 <- which(lower.tri(corr), arr.ind = TRUE)
ind <- which(abs(corr[ind2]) >= threshold, arr.ind = TRUE)
ind3 <- ind2[ind, ]
corr[ind3]
ind3[1,]
ind3[1,] <- order(ind3[1, ])
ind3[1,]
ind2 <- which(lower.tri(corr), arr.ind = TRUE)
ind <- which(abs(corr[ind2]) >= threshold, arr.ind = TRUE)
ind3 <- ind2[ind, ]
ind3[1,] <- ind3[1, order(ind3[1, ])]
ind3[1,]
for (i in 1:nrow(ind3))
{
ind3[i,] <- ind3[i, order(ind3[i, ])]
}
ind3
colnames(envData)[ind3[,1]]
ans <- sort(colnames(envData)[ind3[,1]])
ans <- colnames(envData)[ind3[,1]]
table(ans)
as.matrix(table(ans))
colnames(ans) <- "Frequency"
ans <- as.matrix(table(colnames(envData)[ind3[,1]]))
colnames(ans) <- "Frequency"
ans
?ggsave
library(fitMaxnet)
source('~/R-scripts/fitMaxnet/R/corrAnalysis.R')
library(fitMaxnet)
citation()
library(fitMaxnet)
source('~/R-scripts/fitMaxnet/R/corrAnalysis.R')
View(envCorrAnalysis)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/Occurrence data from Trevor/combinedData_Banksia_spinulosa_complex.csv", stringsAsFactors = FALSE)
# Automagically try to identify longitude and latitude columns:
longColInd <- grep("LONG", toupper(colnames(occData)))
latColInd <- grep("LAT", toupper(colnames(occData)))
z <- c("", "abc")
paste(z, collapse = "; ")
length(NULL)
z <- c(NULL, "abc")
z
paste(z, collapse = "; ")
library(fitMaxnet)
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/Occurrence data from Trevor/combinedData_Banksia_spinulosa_complex.csv", stringsAsFactors = FALSE)
longColInd <- grep("LONG", toupper(colnames(occData)))
latColInd <- grep("LAT", toupper(colnames(occData)))
if (any(c(length(longColInd), length(latColInd)) != 1))
{
naughtyMsg <- NULL
if (length(longColInd) > 1)
naughtyMsg <- "Multiple matches on 'LONG'"
else
naughtyMsg <- "No matches on 'LONG'"
if (length(latColInd) > 1)
naughtyMsg <- c(naughtyMsg, "Multiple matches on 'LAT'")
else
naughtyMsg <- c(naughtyMsg, "No matches on 'LAT'")
stop(paste0("Cannot identify longitude and latitude cols in occData: ", paste0(naughtyMsg, collapse = "; ")))
}
library(fitMaxnet)
longColInd <- grep("LONG", toupper(colnames(occData)))
latColInd <- grep("LAT", toupper(colnames(occData)))
if (any(c(length(longColInd), length(latColInd)) != 1))
{
naughtyMsg <- NULL
if (length(longColInd) > 1)
naughtyMsg <- "Multiple matches on 'LONG'"
else
naughtyMsg <- "No matches on 'LONG'"
if (length(latColInd) > 1)
naughtyMsg <- c(naughtyMsg, "Multiple matches on 'LAT'")
else
naughtyMsg <- c(naughtyMsg, "No matches on 'LAT'")
stop(paste0("Cannot identify longitude and latitude cols in occData: ", paste0(naughtyMsg, collapse = "; ")))
}
if (any(c(length(longColInd), length(latColInd)) != 1))
{
naughtyMsg <- NULL
if (length(longColInd) == 0)
naughtyMsg <- "No matches on 'LONG'"
else
if (length(longColInd) > 1) naughtyMsg <- "Multiple matches on 'LONG'"
if (length(latColInd) == 0)
naughtyMsg <- c(naughtyMsg, "No matches on 'LAT'")
else
if (length(latColInd) > 1) naughtyMsg <- c(naughtyMsg, "Multiple matches on 'LAT'")
stop(paste0("Cannot identify longitude and latitude cols in occData: ", paste0(naughtyMsg, collapse = "; ")))
}
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/Occurrence data from Trevor/combinedData_Banksia_spinulosa_complex.csv", stringsAsFactors = FALSE)
longColInd <- grep("LONG", toupper(colnames(occData)))
latColInd <- grep("LAT", toupper(colnames(occData)))
if (any(c(length(longColInd), length(latColInd)) != 1))
{
naughtyMsg <- NULL
if (length(longColInd) == 0)
naughtyMsg <- "No matches on 'LONG'"
else
if (length(longColInd) > 1) naughtyMsg <- "Multiple matches on 'LONG'"
if (length(latColInd) == 0)
naughtyMsg <- c(naughtyMsg, "No matches on 'LAT'")
else
if (length(latColInd) > 1) naughtyMsg <- c(naughtyMsg, "Multiple matches on 'LAT'")
stop(paste0("Cannot identify longitude and latitude cols in occData: ", paste0(naughtyMsg, collapse = "; ")))
}
