cat("   ", thisTaxon, "\n")
this_Taxon <- gsub(" ", "_", thisTaxon, fixed = TRUE)
occPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", this_Taxon, "_SWD_2019-06-28.csv")
bkgPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", this_Taxon, "_SWD_BKG_2019-06-28.csv")
outPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon)
fitModel(thisTaxon, occPath, bkgPath, 5000, outPath, "basicFit", c(1, 2, 5, 10, 15, 20))
}
cat("*** End of processing\n")
library(fitMaxnet)
library(fitMaxnet)
cat("Start of model fitting:\n")
for (thisTaxon in taxonList)
{
cat("   ", thisTaxon, "\n")
this_Taxon <- gsub(" ", "_", thisTaxon, fixed = TRUE)
occPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", this_Taxon, "_SWD_2019-06-28.csv")
bkgPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", this_Taxon, "_SWD_BKG_2019-06-28.csv")
outPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon)
fitModel(thisTaxon, occPath, bkgPath, 5000, outPath, "basicFit", c(1, 2, 5, 10, 15, 20))
}
cat("*** End of processing\n")
source('~/R-scripts/showMaxNetstuff.R')
source('~/R-scripts/showMaxNetstuff.R')
source('~/R-scripts/showMaxNetstuff.R')
zz <- raster("/media/peterw/D2/Climate_data/AR5/IPCC-CMIP5/Future/rcp85_downscaled_eMAST_v2/2050/mean2050/bioclim_tif/bio01.tif")
plot(zz)
zz2 <- raster("/media/peterw/D2/ENM_env_data/eastOZ-dataset/Future_climate/rcp85_2050/tif/bio01.tif")
plot(zz2)
thisTaxon <- taxonList[1]
this_Taxon <- gsub(" ", "_", thisTaxon, fixed = TRUE)
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
selectedRegMult <- c(2, 1, 1)
name(selectedRegMult) <- taxonList
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
load(modelPath)
selectedRegMult
names(selectedRegMult) <- taxonList
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
load(modelPath)
modelPath
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
modelPath
selectedRegMult <- c(2, 1, 1)
names(selectedRegMult) <- taxonList
cat("Projecting", thisTaxon, "\n")
this_Taxon <- gsub(" ", "_", thisTaxon, fixed = TRUE)
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
load(modelPath)
modelPath
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/reg_",selectedRegMult[thisTaxon], "/", thisTaxon, "/basicFit/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
load(modelPath)
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/reg_",selectedRegMult[thisTaxon], "/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
load(modelPath)
for (thisTaxon in taxonList)
{
cat("Projecting", thisTaxon, "\n")
this_Taxon <- gsub(" ", "_", thisTaxon, fixed = TRUE)
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/reg_",selectedRegMult[thisTaxon], "/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
load(modelPath)
cat("    Projecting model\n")
projMod <- predict(maxnet_model, projData, type = "cloglog")
cat("    Preparing and saving projection raster\n")
projRas <- projStack[[1]]
raster::values(projRas) <- NA
raster::values(projRas)[goodCellInd] <- projMod[,1]
outputPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/projMean2050_rcp85/", this_Taxon, "basicFit_reg_", selectedRegMult[thisTaxon],"_mean2050_rcp85.tif")
raster::writeRaster(projRas, outputPath, format = "GTiff", overwrite = TRUE)
}
ras <- raster("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/Angophora hispida/Angophora hispida/basicFit/projMean2050_rcp85/Angophora_hispidabasicFit_reg_2_mean2050_rcp85.tif")
plot(ras, main = "Angophora hispida 2050 rcp8.5")
ras <- raster("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/Corymbia eximia/Corymbia eximia/basicFit/projMean2050_rcp85/Corymbia_eximiabasicFit_reg_1_mean2050_rcp85.tif")
plot(ras, main = "Corymbia eximia 2050 rcp8.5")
ras <- raster("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/Elaeocarpus reticulatus/Elaeocarpus reticulatus/basicFit/projMean2050_rcp85/Elaeocarpus_reticulatusbasicFit_reg_1_mean2050_rcp85.tif")
plot(ras, main = "Elaeocarpus reticulatus 2050 rcp8.5")
envPath <- "/media/peterw/D2/ENM_env_data/eastOZ-dataset/Future_climate/rcp45_2050/tif"
selectedRegMult <- c(2, 1, 1)
names(selectedRegMult) <- taxonList
prepProjData(envPath)
for (thisTaxon in taxonList)
{
cat("Projecting", thisTaxon, "\n")
this_Taxon <- gsub(" ", "_", thisTaxon, fixed = TRUE)
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/reg_",selectedRegMult[thisTaxon], "/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
load(modelPath)
cat("    Projecting model\n")
projMod <- predict(maxnet_model, projData, type = "cloglog")
cat("    Preparing and saving projection raster\n")
projRas <- projStack[[1]]
raster::values(projRas) <- NA
raster::values(projRas)[goodCellInd] <- projMod[,1]
outputPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/projMean2050_rcp45/", this_Taxon, "basicFit_reg_", selectedRegMult[thisTaxon],"_mean2050_rcp45.tif")
raster::writeRaster(projRas, outputPath, format = "GTiff", overwrite = TRUE)
}
for (thisTaxon in taxonList)
{
cat("Projecting", thisTaxon, "\n")
this_Taxon <- gsub(" ", "_", thisTaxon, fixed = TRUE)
modelPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/reg_",selectedRegMult[thisTaxon], "/", this_Taxon, "_basicFit_reg_", selectedRegMult[thisTaxon], ".Rd")
load(modelPath)
cat("    Projecting model\n")
projMod <- predict(maxnet_model, projData, type = "cloglog")
cat("    Preparing and saving projection raster\n")
projRas <- projStack[[1]]
raster::values(projRas) <- NA
raster::values(projRas)[goodCellInd] <- projMod[,1]
outputPath <- paste0("/home/peterw/Restore and Renew/RandR-webtool-maintenance/New species staging/ENM fitting/", thisTaxon, "/", thisTaxon, "/basicFit/projMean2050_rcp45/", this_Taxon, "basicFit_reg_", selectedRegMult[thisTaxon],"_mean2050_rcp45.tif")
raster::writeRaster(projRas, outputPath, format = "GTiff", overwrite = TRUE)
}
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
extent(maxentRaster)
extent(maxentRaster) == NSW_extent
extent(maxentRaster) == extent(maxentRaster)
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
?crop
extent(maxentRaster) == NSW_extent
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
par(op)
dev.off()
dev.off()
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
source('~/Restore and Renew/R-scripts/ENM fitting Dec 2016/makeNiceImages-newWebsite-450px-2.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
source('~/R-scripts/fitMaxnet/R/occThin.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
source('~/R-scripts/fitMaxnet/R/occThin.R')
View(occThin)
library(fitMaxnet)
library(fitMaxnet)
@backreference
backreference
?backreference
??backreference
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
source('~/R-scripts/fitMaxnet/R/occThin.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
source('~/R-scripts/Make_sysdata_fitMaxnet.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
d <- read.csv("/home/data/RBG Projects/Restore and Renew/ALA-records/SpeciesData/Acacia linifolia/Acacia_linifolia_herbariumRecords_filtered.csv", stringsAsFactors = FALSE)
View(d)
d1 <- occThin(d, 7, 6, 10)
?occThin
library(fitMaxnet)
d1 <- occThin(d, 7, 6, 10)
library(fitMaxnet)
d1 <- occThin(d, 7, 6, 10)
library(fitMaxnet)
library(fitMaxnet)
d1 <- occThin(d, 7, 6, 10)
?sp::spDistsN1
library(fitMaxnet)
d1 <- occThin(d, 7, 6, 10)
View(d1)
buffPoly <- bufferPoints(d1, 100)
library(fitMaxnet)
buffPoly <- bufferPoints(d1, 100)
plot(buffPoly)
plot(buffPoly)
library(sp)
plot(buffPoly)
points(d1$Longitude, d1$Latitude)
?raster::mask
?stopifnot
stopifnot(1 == 1, all.equal(pi, 3.14159265), 1 < 2)
stopifnot(1 == 2, all.equal(pi, 3.14159265), 1 < 2)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
?prepData
library(fitMaxnet)
?prepProjData
?maxnet
library(fitMaxnet)
prepProjData("/mnt/Wallace/ENM_env_data/eastOZ-dataset/Future_climate/rcp45_2050/tif")
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads")
library(fitMaxnet)
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads", "rcp45_2050")
prepProjData("/mnt/Wallace/ENM_env_data/eastOZ-dataset/Future_climate/rcp45_2070/tif")
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads", "rcp45_2070")
prepProjData("/mnt/Wallace/ENM_env_data/eastOZ-dataset/Future_climate/rcp85_2050/tif")
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads", "rcp85_2050")
prepProjData("/mnt/Wallace/ENM_env_data/eastOZ-dataset/Future_climate/rcp85_2070/tif")
projectMaxnet("Pimelea spicata", "/home/data/RBG Projects/SoS/Pimelea spicata/Pimelea spicata/Pimelea spicata/reg_0_5/Pimelea_spicata_reg_0_5.Rd", "/home/peterw/Downloads", "rcp85_2070")
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
load("/home/data/RBG Projects/SoS/Eucalyptus sp. Cattai/ENM/Eucalyptus sp. Cattai/reg_2/Eucalyptus_sp._Cattai_reg_2.Rd")
names(maxnet_model$betas)
library(fitMaxnet)
library(raster)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
occPts <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1/Banksia_spinulosa_SWD.csv", stringsAsFactors = FALSE)
buffPoly <- bufferPts(occPts)
library(fitMaxnet)
buffPoly <- bufferPts(occPts)
buffPoly <- bufferPoints(occPts)
plot(buffPoly)
library(sp)
plot(buffPoly)
source('~/R-scripts/Make_sysdata_fitMaxnet.R')
library(fitMaxnet)
buffPoly <- bufferPoints(occPts)
plot(buffPoly)
library(raster)
bkgCells <- sampleBackground(occPts, raster("/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA/CHELSA_bio10_01.tif"), buffPoly)
library(fitMaxnet)
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1/Banksia_spinulosa_allData_thin_1_occData.csv")
latColInd <- grep("LAT", toupper(colnames(occData)))
longColInd <- grep("LONG", toupper(colnames(occData)))
boundsPoly <- bufferPoints(occData, 100)
library(fitMaxnet)
boundsPoly <- bufferPoints(occData, 100)
library(sp)
boundsPoly <- bufferPoints(occData, 100)
plot(boundsPoly)
library(raster)
envRas <- raster("/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA/CHELSA_bio10_01.tif")
bkg.cells <- sampleBackground(as.matrix(occData[, c(latColInd, longColInd)]) , nBkgSamples = 10000, baseRaster = envRas, boundsPolygon = boundsPoly)
bkg.latlong <- xyFromCell(envRas, bkg.cells)
prepData("aa bb", occData, boundsPoly = boundsPoly, envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA", outputPath = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1")
library(fitMaxnet)
prepData("aa bb", occData, boundsPoly = boundsPoly, envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA", outputPath = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1")
library(fitMaxnet)
prepData("aa bb", occData, boundsPoly = boundsPoly, envDataPath = "/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA", outputPath = "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1")
View(bkg.latlong)
library(sp)
library(raster)
library(fitMaxnet)
library(sp)
envRas <- raster("/home/peterw/Data_and_Projects/ENM_env_data/eastOZ-dataset/Current_climate/CHELSA/CHELSA_bio10_01.tif")
occData <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_spinulosa/ENM_fits/allData/thin_1/Banksia_spinulosa_allData_thin_1_occData.csv", stringsAsFactors = FALSE)
buffPoly <- bufferPoints(occData, 100)
occCells <- raster::cellFromXY(envRas, occData[, c("longitude", "latitude")])
plot(buffPoly)
View(occData)
source('~/R-scripts/sampleBackground_debug.R')
plot(envRas)
# Remove occupied cells from the set available for selection
raster::values(envRas)[occCells] <- NA
activeArea <- raster::mask(envRas, buffPoly)
plot(activeArea)
availableCells <- which(raster::values(activeArea) == 1)
selectedCells <- NULL
for (i in 1:10000)
{
selectedCells <- c(selectedCells, sample(1:length(availableCells), 1))
availableCells <- availableCells[-i]
}
selXY <- xyFromCell(envRas, selectedCells)
points(selXY, pch = 16)
source('~/R-scripts/sampleBackground_debug.R')
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
?base::chull
?chull
?prcomp
?png
source('~/R-scripts/fitMaxnet/R/fitMaxnet.R')
library(fitMaxnet)
library(fitMaxnet)
d <- read.csv("/home/peterw/Data_and_Projects/RBG Projects/Restore and Renew/RandR_KML/Banksia marginata/Banksia_marginata_herbariumRecords.csv")
thinningReview("Banksia marginata", d, "/home/peterw/Data_and_Projects/RBG Projects/Restore and Renew/RandR_KML/Banksia marginata/Banksia_marginata_herbariumRecords.csv", "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/herbariumData_thinningTrials",doPlots = TRUE, writeResults = TRUE)
thinningReview("Banksia marginata", d, "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff", "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/herbariumData_thinningTrials",doPlots = TRUE, writeResults = TRUE)
library(fitMaxnet)
thinningReview("Banksia marginata", d, "/home/peterw/Data_and_Projects/ENM_env_data/OZ-dataset/Current_climate/tiff", "/home/peterw/Data_and_Projects/RBG Projects/Banksia modelling/B_marginata/occData/herbariumData_thinningTrials",doPlots = TRUE, writeResults = TRUE)
source('~/R-scripts/explorePCA_Banskia_marginata-envOutlier.R')
source('~/R-scripts/explorePCA_Banskia_marginata-envOutlier.R')
plot(basePCA$x[, c(1,2)])
text(basePCA$x[, c(1,2)], as.character(occData$siteKey))
library(fitMaxnet)
install.packages("maxnet")
library(fitMaxnet)
library(fitMaxnet)
?makeFolds
library(fitMaxnet)
?makeFolds
??makeFilds
??makeFolds
install.packages("roxygen2")
library(fitMaxnet)
?makeFolds
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(rgeos)
?gBuffer
library(sf)
?st_buffer
occ_pts <- read.csv("/home/peterw/Restore and Renew/ALA-records/SpeciesData/Acacia longifolia/Acacia_longifolia_herbariumRecords_filtered.csv", stringsAsFactors = FALSE)
bufferDist_km = 200
# Convert buffer distance from kilometres to metres
bufferDist <- 1000 * bufferDist_km
ind <- grep("LONG", toupper(colnames(occ_pts)))
if (length(ind) >= 1)
colnames(occ_pts)[ind[1]] <- "longitude"
else
stop("Cannot identify the 'longitude' column in 'occ_pts'")
ind <- grep("LAT", toupper(colnames(occ_pts)))
if (length(ind) >= 1)
colnames(occ_pts)[ind[1]] <- "latitude"
else
stop("Cannot identify the 'latitude' column in 'occ_pts'")
occ_pts
# Try to identify longitude and latitude columns and rename them to 'longitude' and 'latitude'
ind <- grep("LONG", toupper(colnames(occ_pts)))
colnames(occ_pts)[ind[1]] <- "longitude"
ind <- grep("LAT", toupper(colnames(occ_pts)))
colnames(occ_pts)[ind[1]] <- "latitude"
sp::coordinates(occ_pts) <- ~longitude + latitude
zz <- st_as_sf(occ_pts, coords = c("longitude", "latitude"), crs = 4326)
zz_albers <- st_transform(zz, crs = "+proj=aea +lat_1=-18 +lat_2=-36 +lat_0=0 +lon_0=132 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
st_crs(zz)
?st_as_sf.data.frame
zz <- st_as_sf(occ_pts, coords = c("longitude", "latitude"), crs = 4326)
zz
st_crs(zz) <- 4326
zz
zz_albers <- st_transform(zz, crs = "+proj=aea +lat_1=-18 +lat_2=-36 +lat_0=0 +lon_0=132 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
zz_albers
occ_pts_sf <- st_as_sf(occ_pts, coords = c("longitude", "latitude"), crs = 4326)
occ_pts_sf
ptsBuffer <- sf::st_buffer(occ_pts_albers, dist = bufferDist)
occ_pts_albers <- sf::st_transform(occ_pts_sf, crs = "+proj=aea +lat_1=-18 +lat_2=-36 +lat_0=0 +lon_0=132 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
occ_pts_sf <- sf::st_as_sf(occ_pts, coords = c("longitude", "latitude"))
st_crs(occ_pts_sf) <- 4326
occ_pts_albers <- sf::st_transform(occ_pts_sf, crs = "+proj=aea +lat_1=-18 +lat_2=-36 +lat_0=0 +lon_0=132 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
ptsBuffer <- sf::st_buffer(occ_pts_albers, dist = bufferDist)
#st <- Sys.time()
# clippedBuffer <- sf::st_intersection(st_geometry(st_as_sf(ptsBuffer)), ozPolygon)
clippedBuffer <- sf::st_intersection(st_geometry(ptsBuffer), ozPolygon)
ozPolygon <- st_read("/home/peterw/D1/MapData/Australia_polygon/australia/australia_polygon.shp")
ozPolygon <- st_transform(ozPolygon, "+proj=aea +lat_1=-18 +lat_2=-36 +lat_0=0 +lon_0=132 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
#st <- Sys.time()
# clippedBuffer <- sf::st_intersection(st_geometry(st_as_sf(ptsBuffer)), ozPolygon)
clippedBuffer <- sf::st_intersection(st_geometry(ptsBuffer), ozPolygon)
plot(clippedBuffer)
ptsBuffer <- sf::st_union(sf::st_buffer(occ_pts_albers, dist = bufferDist))
plot(ptsBuffer)
#st <- Sys.time()
# clippedBuffer <- sf::st_intersection(st_geometry(st_as_sf(ptsBuffer)), ozPolygon)
clippedBuffer <- sf::st_intersection(st_geometry(ptsBuffer), ozPolygon)
plot(clippedBuffer)
load("~/R-scripts/fitMaxnet/R/sysdata.rda")
plot(ozPolygon)
#st <- Sys.time()
# clippedBuffer <- sf::st_intersection(st_geometry(st_as_sf(ptsBuffer)), ozPolygon)
clippedBuffer <- sf::st_intersection(st_geometry(ptsBuffer), ozPolygon)
st_crs(ptsBuffer)
st_crs(ozPolygon)
ptsBuffer <- sf::st_union(sf::st_buffer(occ_pts_albers, dist = bufferDist))
plot(ptsBuffer)
#st <- Sys.time()
# clippedBuffer <- sf::st_intersection(st_geometry(st_as_sf(ptsBuffer)), ozPolygon)
clippedBuffer <- sf::st_intersection(st_geometry(ptsBuffer), ozPolygon)
#st <- Sys.time()
# clippedBuffer <- sf::st_intersection(st_geometry(st_as_sf(ptsBuffer)), ozPolygon)
clippedBuffer <- sf::st_intersection(st_geometry(ptsBuffer), ozPolygon)
st_crs(ptsBuffer)
occ_pts_sf <- sf::st_as_sf(occ_pts, coords = c("longitude", "latitude"))
st_crs(occ_pts_sf) <- 4326
##occ_pts_albers <- sf::st_transform(occ_pts_sf, crs = "+proj=aea +lat_1=-18 +lat_2=-36 +lat_0=0 +lon_0=132 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
occ_pts_albers <- sf::st_transform(occ_pts_sf, crs = 3577)
ptsBuffer <- sf::st_union(sf::st_buffer(occ_pts_albers, dist = bufferDist))
#st <- Sys.time()
# clippedBuffer <- sf::st_intersection(st_geometry(st_as_sf(ptsBuffer)), ozPolygon)
clippedBuffer <- sf::st_intersection(st_geometry(ptsBuffer), ozPolygon)
st_crs(ozPolygon)
ozPoly2 <- st_transform(ozPolygon, crs = 3577)
clippedBuffer <- st::st_transform(st_geometry(ptsBuffer), ozPoly2)
clippedBuffer <- sf::st_transform(st_geometry(ptsBuffer), ozPoly2)
class(ozPoly2)
class(ptsBuffer)
clippedBuffer <- st_interection(ptsBuffer, ozPoly2)
clippedBuffer <- st_intersection(ptsBuffer, ozPoly2)
plot(clippedBuffer)
ozPolygon <- st_read("/home/peterw/D1/MapData/Australia_polygon/coastline/Australia_polygon.shp")
ozPolygon <- st_transform(ozPolygon, crs = 3577)
cb2 <- st_intersection(ptsBuffer, ozPolygon)
plot(cb2)
st_crs(ozPolygon)
devtools:use_data(ozPolygon)
devtools::use_data(ozPolygon)
install.packages("devtools")
devtools::use_data(ozPolygon)
library(devtools)
devtools::use_data(ozPolygon, internal = TRUE)
devtools::use_data(ozPolygon, internal = TRUE, pkg = ".")
usethis::use_data(ozPolygon, internal = TRUE, pkg = ".")
ls(ozPolygon)
usethis::use_data(ozPolygon, internal = TRUE, pkg = ".")
usethis::use_data(ozPolygon, internal = TRUE, pkg = ".")
plot(ozPolygon)
plot(st_geometry(ozPolygon))
st_crs(ozPolygon)
usethis::use_data(ozPolygon, internal = TRUE, pkg = ".")
usethis::use_data(ozPolygon, internal = TRUE, pkg = ".", overwrite = TRUE)
usethis::use_data(ozPolygon, internal = TRUE, pkg = ".", overwrite = TRUE)
as.name(ozPolygon)
usethis::use_data(ozPolygon, internal = FALSE, pkg = ".", overwrite = TRUE)
zz <- ozPolygon
usethis::use_data(zz, internal = TRUE, pkg = ".", overwrite = TRUE)
ozPolygon <- st_read("/home/peterw/D1/MapData/Australia_polygon/coastline/Australia_polygon.shp")
usethis::use_data(ozPolygon, internal = TRUE, pkg = ".", overwrite = TRUE)
substitute(ozPolygon)
as.character(substitute(ozPolygon))
usethis::use_data(substitute(ozPolygon), internal = TRUE, pkg = ".", overwrite = TRUE)
exists(ozPolygon)
exists("ozPolygon")
usethis::use_data("ozPolygon", internal = TRUE, pkg = ".", overwrite = TRUE)
save(ozPolygon, file = "/home/peterw/R-scripts/fitMaxnet/R/sysdata.rda")
library(fitMaxnet)
occData <- read.csv("/home/peterw/Restore and Renew/ALA-records/SpeciesData/Acacia longifolia/Acacia_longifolia_herbariumRecords_filtered.csv", stringsAsFactors = FALSE)
ans <- bufferPoints(occData)
library(fitMaxnet)
ans <- bufferPoints(occData)
ozPolygon <- st_read("/home/peterw/D1/MapData/Australia_polygon/coastline/ozCoastline.shp")
ozPolygon <- st_transform(ozPolygon, crs = 3577)
save(ozPolygon, file = "/home/peterw/R-scripts/fitMaxnet/R/sysdata.rda")
library(fitMaxnet)
ans <- bufferPoints(occData)
library(fitMaxnet)
library(fitMaxnet)
?raster::mask
?sf::as_Spatial
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
library(fitMaxnet)
