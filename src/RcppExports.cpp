// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// doDilation2
NumericMatrix doDilation2(int npts, NumericMatrix d, int nRow, int nCol, double yul, double xll, double cellSize, NumericVector ptRows, NumericVector ptCols, double dist_km);
RcppExport SEXP _fitMaxnet_doDilation2(SEXP nptsSEXP, SEXP dSEXP, SEXP nRowSEXP, SEXP nColSEXP, SEXP yulSEXP, SEXP xllSEXP, SEXP cellSizeSEXP, SEXP ptRowsSEXP, SEXP ptColsSEXP, SEXP dist_kmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type npts(nptsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nRow(nRowSEXP);
    Rcpp::traits::input_parameter< int >::type nCol(nColSEXP);
    Rcpp::traits::input_parameter< double >::type yul(yulSEXP);
    Rcpp::traits::input_parameter< double >::type xll(xllSEXP);
    Rcpp::traits::input_parameter< double >::type cellSize(cellSizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ptRows(ptRowsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ptCols(ptColsSEXP);
    Rcpp::traits::input_parameter< double >::type dist_km(dist_kmSEXP);
    rcpp_result_gen = Rcpp::wrap(doDilation2(npts, d, nRow, nCol, yul, xll, cellSize, ptRows, ptCols, dist_km));
    return rcpp_result_gen;
END_RCPP
}
// endLatLongC
NumericVector endLatLongC(double dist_km, double bearing, double lat1, double long1, bool isRadians);
RcppExport SEXP _fitMaxnet_endLatLongC(SEXP dist_kmSEXP, SEXP bearingSEXP, SEXP lat1SEXP, SEXP long1SEXP, SEXP isRadiansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dist_km(dist_kmSEXP);
    Rcpp::traits::input_parameter< double >::type bearing(bearingSEXP);
    Rcpp::traits::input_parameter< double >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< double >::type long1(long1SEXP);
    Rcpp::traits::input_parameter< bool >::type isRadians(isRadiansSEXP);
    rcpp_result_gen = Rcpp::wrap(endLatLongC(dist_km, bearing, lat1, long1, isRadians));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fitMaxnet_doDilation2", (DL_FUNC) &_fitMaxnet_doDilation2, 10},
    {"_fitMaxnet_endLatLongC", (DL_FUNC) &_fitMaxnet_endLatLongC, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_fitMaxnet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
